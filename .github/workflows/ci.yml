name: CI
on:
  push:
    branches:
      - master
      - release-[2-9].*
  pull_request:
      branches-ignore:
        - release-[0-1].*
  pull_request_target:
      branches-ignore:
        - release-[0-1].*
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
jobs:
  build:
    if:
      (github.event_name == 'pull_request_target' && github.event.pull_request.user.login == 'dependabot[bot]') ||
      (github.event_name == 'pull_request' && github.event.pull_request.user.login != 'dependabot[bot]') ||
      github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            name: Linux
      fail-fast: false
    services:
      oracle:
        image: gvenzl/oracle-xe:latest
        env:
          ORACLE_RANDOM_PASSWORD: true
          APP_USER: particular
          APP_USER_PASSWORD: Welcome1
        ports:
          - 1521:1521
        options: >-
          --health-cmd healthcheck.sh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
    steps:
      - name: Check for secrets
        env:
          SECRETS_AVAILABLE: ${{ secrets.SECRETS_AVAILABLE }}
        shell: pwsh
        run: exit $(If ($env:SECRETS_AVAILABLE -eq 'true') { 0 } Else { 1 })
      - name: Checkout
        if: github.event_name != 'pull_request_target'
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
      - name: Checkout for Dependabot
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v2.4.0
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
          fetch-depth: 0                
      - name: Setup .NET 6 SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: 6.0.x
      - name: Setup .NET 5 SDK 
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: 5.0.x          
      - name: Setup .NET Core 3.1 runtime
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: 3.1.x     
      - name: Build
        run: dotnet build src --configuration Release
      - name: Upload packages
        if: matrix.name == 'Windows'
        uses: actions/upload-artifact@v2.2.4
        with:
          name: NuGet packages
          path: nugets/
          retention-days: 7
      - name: Install SQL Server
        uses: Particular/install-sql-server-action@v1.0.0
        with:
          connection-string-env-var: SQLServerConnectionString
          catalog: nservicebus      
      - name: Run SqlTransport tests
        uses: Particular/run-tests-action@project-filter
        with:
          path: src/NServiceBus.NHibernate.AcceptanceTests-SqlTransportTests/NServiceBus.NHibernate.AcceptanceTests-SqlTransportTests.csproj                    
      - name: Run Oracle tests
        uses: Particular/run-tests-action@project-filter
        with:
          path: src/NServiceBus.NHibernate.AcceptanceTests-Oracle/NServiceBus.NHibernate.AcceptanceTests-Oracle.csproj
